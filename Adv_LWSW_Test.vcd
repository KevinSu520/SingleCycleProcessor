$date
	Fri Jan 27 13:31:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Core_tb $end
$var reg 1 ! clk $end
$var reg 7 " cycle_count [6:0] $end
$var reg 1 # mem_enable $end
$var reg 1 $ reset $end
$scope module core_proc $end
$var wire 1 ! clock $end
$var wire 1 # mem_en $end
$var wire 1 $ reset $end
$var wire 32 % pc_mux_select [31:0] $end
$var wire 32 & pc_branch_offset [31:0] $end
$var wire 32 ' next_instr_addr [31:0] $end
$var wire 1 ( misaligned_data_addr $end
$var wire 1 ) mem_instr_req_valid $end
$var wire 1 * mem_instr_data_valid $end
$var wire 1 + mem_gnt_req $end
$var wire 1 , mem_data_req_valid $end
$var wire 3 - lsu_operator [2:0] $end
$var wire 1 . lsu_en $end
$var wire 32 / load_mem_data [31:0] $end
$var wire 32 0 instr_mem_data [31:0] $end
$var wire 32 1 instr_mem_addr [31:0] $end
$var wire 1 2 illegal_instr $end
$var wire 1 3 comparator_result_valid $end
$var wire 32 4 comparator_result [31:0] $end
$var wire 3 5 comparator_function [2:0] $end
$var wire 1 6 comparator_en $end
$var wire 1 7 comparator_branch_valid $end
$var wire 1 8 comparator_branch $end
$var wire 1 9 alu_valid $end
$var wire 32 : alu_result [31:0] $end
$var wire 7 ; alu_operator [6:0] $end
$var wire 32 < alu_operand_b [31:0] $end
$var wire 32 = alu_operand_a [31:0] $end
$var wire 1 > alu_en $end
$var wire 32 ? DRAM_wdata [31:0] $end
$var wire 32 @ DRAM_load_mem_data [31:0] $end
$scope module ALUModule $end
$var wire 1 $ reset $end
$var wire 7 A alu_operator_ip [6:0] $end
$var wire 32 B alu_operand_b_ip [31:0] $end
$var wire 32 C alu_operand_a_ip [31:0] $end
$var wire 1 > alu_enable_ip $end
$var reg 32 D alu_result_op [31:0] $end
$var reg 1 9 alu_valid_op $end
$upscope $end
$scope module CompareModule $end
$var wire 1 $ reset $end
$var wire 32 E comparator_operand_b_ip [31:0] $end
$var wire 32 F comparator_operand_a_ip [31:0] $end
$var wire 3 G comparator_func_ip [2:0] $end
$var wire 1 6 comparator_en_ip $end
$var reg 1 H a_is_equal_b $end
$var reg 1 I a_is_greater_or_equal_b $end
$var reg 1 8 comparator_branch_op $end
$var reg 32 J comparator_result_op [31:0] $end
$var reg 1 3 comparator_result_valid_op $end
$var reg 1 7 compare_branch_valid_op $end
$upscope $end
$scope module DecodeModule $end
$var wire 32 K alu_result_ip [31:0] $end
$var wire 1 9 alu_result_valid_ip $end
$var wire 1 ! clock $end
$var wire 32 L comparator_result_ip [31:0] $end
$var wire 1 3 comparator_result_valid_ip $end
$var wire 1 $ reset $end
$var wire 32 M valid_instr_to_decode [31:0] $end
$var wire 5 N regfile_write_addr_a_id [4:0] $end
$var wire 5 O regfile_read_addr_b_id [4:0] $end
$var wire 5 P regfile_read_addr_a_id [4:0] $end
$var wire 32 Q regfile_b_out [31:0] $end
$var wire 32 R regfile_a_out [31:0] $end
$var wire 32 S pc4 [31:0] $end
$var wire 32 T pc [31:0] $end
$var wire 1 , mem_data_valid_ip $end
$var wire 32 U mem_data_ip [31:0] $end
$var wire 1 * instr_data_valid_ip $end
$var wire 32 V instr_data_ip [31:0] $end
$var wire 1 > alu_en_op $end
$var reg 32 W J_IMM [31:0] $end
$var reg 32 X U_IMM [31:0] $end
$var reg 32 Y alu_operand_a_ex_op [31:0] $end
$var reg 32 Z alu_operand_b_ex_op [31:0] $end
$var reg 7 [ alu_operator_op [6:0] $end
$var reg 1 6 comparator_en_op $end
$var reg 3 \ comparator_func_op [2:0] $end
$var reg 1 . en_lsu_op $end
$var reg 3 ] lsu_operator_op [2:0] $end
$var reg 32 ^ mem_wdata_op [31:0] $end
$var reg 3 _ operand_b_select [2:0] $end
$var reg 32 ` pc_branch_offset_op [31:0] $end
$var reg 32 a regfile_write_data [31:0] $end
$var reg 1 b regfile_write_data_valid $end
$var reg 3 c writeback_mux [2:0] $end
$var integer 32 d operand_a_select [31:0] $end
$var integer 32 e pc_mux_op [31:0] $end
$scope module register_file $end
$var wire 1 ! clock $end
$var wire 5 f raddr_a_ip [4:0] $end
$var wire 32 g raddr_a_op [31:0] $end
$var wire 5 h raddr_b_ip [4:0] $end
$var wire 32 i raddr_b_op [31:0] $end
$var wire 1 $ reset $end
$var wire 5 j waddr_a [4:0] $end
$var wire 5 k waddr_a_ip [4:0] $end
$var wire 32 l wdata_a_ip [31:0] $end
$var wire 1 b we_a_ip $end
$var wire 32 m write_enable_a_dec [31:0] $end
$scope begin RF[1] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 n data_ip [31:0] $end
$var wire 1 o enable $end
$var wire 1 $ reset $end
$var reg 32 p data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[2] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 q data_ip [31:0] $end
$var wire 1 r enable $end
$var wire 1 $ reset $end
$var reg 32 s data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[3] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 t data_ip [31:0] $end
$var wire 1 u enable $end
$var wire 1 $ reset $end
$var reg 32 v data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[4] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 w data_ip [31:0] $end
$var wire 1 x enable $end
$var wire 1 $ reset $end
$var reg 32 y data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[5] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 z data_ip [31:0] $end
$var wire 1 { enable $end
$var wire 1 $ reset $end
$var reg 32 | data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[6] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 } data_ip [31:0] $end
$var wire 1 ~ enable $end
$var wire 1 $ reset $end
$var reg 32 !" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[7] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 "" data_ip [31:0] $end
$var wire 1 #" enable $end
$var wire 1 $ reset $end
$var reg 32 $" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[8] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 %" data_ip [31:0] $end
$var wire 1 &" enable $end
$var wire 1 $ reset $end
$var reg 32 '" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[9] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 (" data_ip [31:0] $end
$var wire 1 )" enable $end
$var wire 1 $ reset $end
$var reg 32 *" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[10] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 +" data_ip [31:0] $end
$var wire 1 ," enable $end
$var wire 1 $ reset $end
$var reg 32 -" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[11] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 ." data_ip [31:0] $end
$var wire 1 /" enable $end
$var wire 1 $ reset $end
$var reg 32 0" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[12] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 1" data_ip [31:0] $end
$var wire 1 2" enable $end
$var wire 1 $ reset $end
$var reg 32 3" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[13] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 4" data_ip [31:0] $end
$var wire 1 5" enable $end
$var wire 1 $ reset $end
$var reg 32 6" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[14] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 7" data_ip [31:0] $end
$var wire 1 8" enable $end
$var wire 1 $ reset $end
$var reg 32 9" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[15] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 :" data_ip [31:0] $end
$var wire 1 ;" enable $end
$var wire 1 $ reset $end
$var reg 32 <" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[16] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 =" data_ip [31:0] $end
$var wire 1 >" enable $end
$var wire 1 $ reset $end
$var reg 32 ?" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[17] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 @" data_ip [31:0] $end
$var wire 1 A" enable $end
$var wire 1 $ reset $end
$var reg 32 B" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[18] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 C" data_ip [31:0] $end
$var wire 1 D" enable $end
$var wire 1 $ reset $end
$var reg 32 E" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[19] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 F" data_ip [31:0] $end
$var wire 1 G" enable $end
$var wire 1 $ reset $end
$var reg 32 H" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[20] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 I" data_ip [31:0] $end
$var wire 1 J" enable $end
$var wire 1 $ reset $end
$var reg 32 K" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[21] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 L" data_ip [31:0] $end
$var wire 1 M" enable $end
$var wire 1 $ reset $end
$var reg 32 N" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[22] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 O" data_ip [31:0] $end
$var wire 1 P" enable $end
$var wire 1 $ reset $end
$var reg 32 Q" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[23] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 R" data_ip [31:0] $end
$var wire 1 S" enable $end
$var wire 1 $ reset $end
$var reg 32 T" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[24] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 U" data_ip [31:0] $end
$var wire 1 V" enable $end
$var wire 1 $ reset $end
$var reg 32 W" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[25] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 X" data_ip [31:0] $end
$var wire 1 Y" enable $end
$var wire 1 $ reset $end
$var reg 32 Z" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[26] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 [" data_ip [31:0] $end
$var wire 1 \" enable $end
$var wire 1 $ reset $end
$var reg 32 ]" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[27] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 ^" data_ip [31:0] $end
$var wire 1 _" enable $end
$var wire 1 $ reset $end
$var reg 32 `" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[28] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 a" data_ip [31:0] $end
$var wire 1 b" enable $end
$var wire 1 $ reset $end
$var reg 32 c" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[29] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 d" data_ip [31:0] $end
$var wire 1 e" enable $end
$var wire 1 $ reset $end
$var reg 32 f" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[30] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 g" data_ip [31:0] $end
$var wire 1 h" enable $end
$var wire 1 $ reset $end
$var reg 32 i" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin RF[31] $end
$scope module RF $end
$var wire 1 ! clock $end
$var wire 32 j" data_ip [31:0] $end
$var wire 1 k" enable $end
$var wire 1 $ reset $end
$var reg 32 l" data_op [31:0] $end
$upscope $end
$upscope $end
$scope begin gen_we_encoder[0] $end
$upscope $end
$scope begin gen_we_encoder[1] $end
$upscope $end
$scope begin gen_we_encoder[2] $end
$upscope $end
$scope begin gen_we_encoder[3] $end
$upscope $end
$scope begin gen_we_encoder[4] $end
$upscope $end
$scope begin gen_we_encoder[5] $end
$upscope $end
$scope begin gen_we_encoder[6] $end
$upscope $end
$scope begin gen_we_encoder[7] $end
$upscope $end
$scope begin gen_we_encoder[8] $end
$upscope $end
$scope begin gen_we_encoder[9] $end
$upscope $end
$scope begin gen_we_encoder[10] $end
$upscope $end
$scope begin gen_we_encoder[11] $end
$upscope $end
$scope begin gen_we_encoder[12] $end
$upscope $end
$scope begin gen_we_encoder[13] $end
$upscope $end
$scope begin gen_we_encoder[14] $end
$upscope $end
$scope begin gen_we_encoder[15] $end
$upscope $end
$scope begin gen_we_encoder[16] $end
$upscope $end
$scope begin gen_we_encoder[17] $end
$upscope $end
$scope begin gen_we_encoder[18] $end
$upscope $end
$scope begin gen_we_encoder[19] $end
$upscope $end
$scope begin gen_we_encoder[20] $end
$upscope $end
$scope begin gen_we_encoder[21] $end
$upscope $end
$scope begin gen_we_encoder[22] $end
$upscope $end
$scope begin gen_we_encoder[23] $end
$upscope $end
$scope begin gen_we_encoder[24] $end
$upscope $end
$scope begin gen_we_encoder[25] $end
$upscope $end
$scope begin gen_we_encoder[26] $end
$upscope $end
$scope begin gen_we_encoder[27] $end
$upscope $end
$scope begin gen_we_encoder[28] $end
$upscope $end
$scope begin gen_we_encoder[29] $end
$upscope $end
$scope begin gen_we_encoder[30] $end
$upscope $end
$scope begin gen_we_encoder[31] $end
$upscope $end
$scope module RF0 $end
$var wire 1 ! clock $end
$var wire 32 m" data_ip [31:0] $end
$var wire 1 n" enable $end
$var wire 1 $ reset $end
$var reg 32 o" data_op [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module FetchModule $end
$var wire 1 p" Instr_or_Data_op $end
$var wire 32 q" alu_result_ip [31:0] $end
$var wire 1 ! clock $end
$var wire 1 8 comparator_branch_ip $end
$var wire 1 7 compare_branch_valid_ip $end
$var wire 32 r" pc_branch_offset_ip [31:0] $end
$var wire 32 s" pc_mux_ip [31:0] $end
$var wire 1 $ reset $end
$var wire 1 + instr_gnt_ip $end
$var reg 32 t" Next_PC [31:0] $end
$var reg 32 u" PC [31:0] $end
$var reg 1 2 illegal_instr_op $end
$var reg 32 v" instr_addr_op [31:0] $end
$var reg 1 ) instr_req_op $end
$var reg 32 w" next_instr_addr_op [31:0] $end
$upscope $end
$scope module LoadStoreUnit $end
$var wire 1 9 alu_valid_ip $end
$var wire 1 ! clock $end
$var wire 1 . lsu_en_ip $end
$var wire 3 x" lsu_operator_ip [2:0] $end
$var wire 32 y" mem_addr_ip [31:0] $end
$var wire 1 $ reset $end
$var wire 1 z" valid_mem_operation $end
$var wire 32 {" mem_data_ip [31:0] $end
$var wire 1 + data_gnt_i $end
$var reg 1 , data_req_op $end
$var reg 32 |" load_mem_data_op [31:0] $end
$var reg 1 ( misaligned_addr_op $end
$upscope $end
$scope module MainMemory $end
$var wire 1 ! clock $end
$var wire 32 }" data_addr_ip [31:0] $end
$var wire 1 , data_req_ip $end
$var wire 32 ~" instr_addr_ip [31:0] $end
$var wire 1 ) instr_req_ip $end
$var wire 3 !# lsu_operator [2:0] $end
$var wire 1 # mem_en $end
$var wire 32 "# wdata_ip [31:0] $end
$var wire 1 + mem_gnt_op $end
$var reg 32 ## instr_data_op [31:0] $end
$var reg 1 * instr_valid_op $end
$var reg 32 $# load_data_op [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 %# i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000 %#
bx $#
bz ##
bz "#
b0 !#
bx ~"
b0 }"
bz |"
bx {"
0z"
b0 y"
b0 x"
bx w"
bx v"
bx u"
bx t"
b0 s"
bz r"
b0 q"
0p"
bx o"
0n"
bz m"
bx l"
0k"
bz j"
bx i"
0h"
bz g"
bx f"
0e"
bz d"
bx c"
0b"
bz a"
bx `"
0_"
bz ^"
bx ]"
0\"
bz ["
bx Z"
0Y"
bz X"
bx W"
0V"
bz U"
bx T"
0S"
bz R"
bx Q"
0P"
bz O"
bx N"
0M"
bz L"
bx K"
0J"
bz I"
bx H"
0G"
bz F"
bx E"
0D"
bz C"
bx B"
0A"
bz @"
bx ?"
0>"
bz ="
bx <"
0;"
bz :"
bx 9"
08"
bz 7"
bx 6"
05"
bz 4"
bx 3"
02"
bz 1"
bx 0"
0/"
bz ."
bx -"
0,"
bz +"
bx *"
0)"
bz ("
bx '"
0&"
bz %"
bx $"
0#"
bz ""
bx !"
0~
bz }
bx |
0{
bz z
bx y
0x
bz w
bx v
0u
bz t
bx s
0r
bz q
bx p
0o
bz n
b0 m
bz l
bz k
bz j
bx i
bz h
bx g
bz f
b0 e
b10 d
b0 c
0b
bz a
bz `
b101 _
bz ^
b0 ]
b0 \
b0 [
bz Z
bz Y
bz X
bx W
bz V
bz U
bx T
bx S
bx R
bx Q
bz P
bz O
bz N
bz M
bz L
b0 K
bz J
zI
zH
b0 G
bz F
bz E
b0 D
bz C
bz B
b0 A
bx @
bz ?
0>
bz =
bz <
b0 ;
b0 :
09
08
07
06
b0 5
bz 4
03
x2
bx 1
bz 0
bz /
0.
b0 -
0,
1+
0*
x)
0(
bx '
bz &
b0 %
1$
1#
b0 "
1!
$end
#1
0!
#2
b100 t"
b0 u"
0)
b0 '
b0 S
b0 w"
b0 1
b0 T
b0 v"
b0 ~"
b0 p
b0 s
b0 v
b0 y
b0 |
b0 !"
b0 $"
b0 '"
b0 *"
b0 -"
b0 0"
b0 3"
b0 6"
b0 9"
b0 <"
b0 ?"
b0 B"
b0 E"
b0 H"
b0 K"
b0 N"
b0 Q"
b0 T"
b0 W"
b0 Z"
b0 ]"
b0 `"
b0 c"
b0 f"
b0 i"
b0 l"
b0 o"
1!
#3
0!
#4
1!
#5
0!
#6
1,"
b10000000000 m
1b
1>
19
b1100100 :
b1100100 D
b1100100 K
b1100100 q"
b1100100 y"
b1100100 }"
b1100100 a
b1100100 l
b1100100 n
b1100100 q
b1100100 t
b1100100 w
b1100100 z
b1100100 }
b1100100 ""
b1100100 %"
b1100100 ("
b1100100 +"
b1100100 ."
b1100100 1"
b1100100 4"
b1100100 7"
b1100100 :"
b1100100 ="
b1100100 @"
b1100100 C"
b1100100 F"
b1100100 I"
b1100100 L"
b1100100 O"
b1100100 R"
b1100100 U"
b1100100 X"
b1100100 ["
b1100100 ^"
b1100100 a"
b1100100 d"
b1100100 g"
b1100100 j"
b1100100 m"
b0 =
b0 C
b0 F
b0 Y
b0 R
b0 g
b0 P
b0 f
b0 Q
b0 i
b100 O
b100 h
b1010 j
b1010 N
b1010 k
b1100100 <
b1100100 B
b1100100 E
b1100100 Z
b11000 ;
b11000 A
b11000 [
b1 c
b1 _
b0 d
b110010000000000010100010011 M
b1000 t"
b110010000000000010100010011 0
b110010000000000010100010011 V
b110010000000000010100010011 ##
1*
b100 u"
b1000 '
b1000 S
b1000 w"
1)
b100 1
b100 T
b100 v"
b100 ~"
b1 "
1!
0$
#7
0!
#8
bzxxxxxxxx @
bzxxxxxxxx {"
bzxxxxxxxx $#
1(
1,
0,"
1z"
b0 m
bz a
bz l
bz n
bz q
bz t
bz w
bz z
bz }
bz ""
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz @"
bz C"
bz F"
bz I"
bz L"
bz O"
bz R"
bz U"
bz X"
bz ["
bz ^"
bz a"
bz d"
bz g"
bz j"
bz m"
0b
b0 :
b0 D
b0 K
b0 q"
b0 y"
b0 }"
b101 P
b101 f
b1100100 Q
b1100100 i
b1010 O
b1010 h
b0 j
b0 N
b0 k
b0 <
b0 B
b0 E
b0 Z
b101 -
b101 ]
b101 x"
b101 !#
b1100100 ?
b1100100 ^
b1100100 "#
1.
b0 c
b10 _
b0 d
b11000 ;
b11000 A
b11000 [
b101000101010000000100011 M
b101000101010000000100011 0
b101000101010000000100011 V
b101000101010000000100011 ##
b1100 t"
b10 "
b1100100 -"
b1100 '
b1100 S
b1100 w"
b1000 1
b1000 T
b1000 v"
b1000 ~"
b1000 u"
1!
#9
0!
#10
15"
b10000000000000 m
b0 a
b0 l
b0 n
b0 q
b0 t
b0 w
b0 z
b0 }
b0 ""
b0 %"
b0 ("
b0 +"
b0 ."
b0 1"
b0 4"
b0 7"
b0 :"
b0 ="
b0 @"
b0 C"
b0 F"
b0 I"
b0 L"
b0 O"
b0 R"
b0 U"
b0 X"
b0 ["
b0 ^"
b0 a"
b0 d"
b0 g"
b0 j"
b0 m"
1b
b0 /
b0 U
b0 |"
0(
1,
b0 @
b0 {"
b0 $#
b100 :
b100 D
b100 K
b100 q"
b100 y"
b100 }"
b0 Q
b0 i
b100 O
b100 h
b1101 j
b1101 N
b1101 k
b100 <
b100 B
b100 E
b100 Z
b10 c
b0 -
b0 ]
b0 x"
b0 !#
1.
bz ?
bz ^
bz "#
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b10000101010011010000011 M
b10000 t"
b10000101010011010000011 0
b10000101010011010000011 V
b10000101010011010000011 ##
b1100 u"
b10000 '
b10000 S
b10000 w"
b1100 1
b1100 T
b1100 v"
b1100 ~"
b11 "
1!
#11
0!
#12
1x
05"
0z"
0(
bz /
bz U
bz |"
0,
b10000 m
b1111011 a
b1111011 l
b1111011 n
b1111011 q
b1111011 t
b1111011 w
b1111011 z
b1111011 }
b1111011 ""
b1111011 %"
b1111011 ("
b1111011 +"
b1111011 ."
b1111011 1"
b1111011 4"
b1111011 7"
b1111011 :"
b1111011 ="
b1111011 @"
b1111011 C"
b1111011 F"
b1111011 I"
b1111011 L"
b1111011 O"
b1111011 R"
b1111011 U"
b1111011 X"
b1111011 ["
b1111011 ^"
b1111011 a"
b1111011 d"
b1111011 g"
b1111011 j"
b1111011 m"
b1111011 :
b1111011 D
b1111011 K
b1111011 q"
b1111011 y"
b1111011 }"
b0 P
b0 f
b11011 O
b11011 h
b100 j
b100 N
b100 k
b1111011 <
b1111011 B
b1111011 E
b1111011 Z
0.
b1 c
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b111101100000000001000010011 M
b111101100000000001000010011 0
b111101100000000001000010011 V
b111101100000000001000010011 ##
b10100 t"
b100 "
b10100 '
b10100 S
b10100 w"
b10000 1
b10000 T
b10000 v"
b10000 ~"
b10000 u"
1!
#13
0!
#14
0x
1J"
b100000000000000000000 m
b11111111111111111111111111101001 a
b11111111111111111111111111101001 l
b11111111111111111111111111101001 n
b11111111111111111111111111101001 q
b11111111111111111111111111101001 t
b11111111111111111111111111101001 w
b11111111111111111111111111101001 z
b11111111111111111111111111101001 }
b11111111111111111111111111101001 ""
b11111111111111111111111111101001 %"
b11111111111111111111111111101001 ("
b11111111111111111111111111101001 +"
b11111111111111111111111111101001 ."
b11111111111111111111111111101001 1"
b11111111111111111111111111101001 4"
b11111111111111111111111111101001 7"
b11111111111111111111111111101001 :"
b11111111111111111111111111101001 ="
b11111111111111111111111111101001 @"
b11111111111111111111111111101001 C"
b11111111111111111111111111101001 F"
b11111111111111111111111111101001 I"
b11111111111111111111111111101001 L"
b11111111111111111111111111101001 O"
b11111111111111111111111111101001 R"
b11111111111111111111111111101001 U"
b11111111111111111111111111101001 X"
b11111111111111111111111111101001 ["
b11111111111111111111111111101001 ^"
b11111111111111111111111111101001 a"
b11111111111111111111111111101001 d"
b11111111111111111111111111101001 g"
b11111111111111111111111111101001 j"
b11111111111111111111111111101001 m"
b1100100 =
b1100100 C
b1100100 F
b1100100 Y
b11111111111111111111111111101001 :
b11111111111111111111111111101001 D
b11111111111111111111111111101001 K
b11111111111111111111111111101001 q"
b11111111111111111111111111101001 y"
b11111111111111111111111111101001 }"
b1100100 R
b1100100 g
b1010 P
b1010 f
b1111011 Q
b1111011 i
b100 O
b100 h
b10100 j
b10100 N
b10100 k
b1111011 <
b1111011 B
b1111011 E
b1111011 Z
b1 c
b0 _
b0 d
b11001 ;
b11001 A
b11001 [
b1000000010001010000101000110011 M
b11000 t"
b1000000010001010000101000110011 0
b1000000010001010000101000110011 V
b1000000010001010000101000110011 ##
b10100 u"
b11000 '
b11000 S
b11000 w"
b10100 1
b10100 T
b10100 v"
b10100 ~"
b1111011 y
b101 "
1!
#15
0!
#16
1(
0,
0J"
1z"
b0 m
bz a
bz l
bz n
bz q
bz t
bz w
bz z
bz }
bz ""
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz @"
bz C"
bz F"
bz I"
bz L"
bz O"
bz R"
bz U"
bz X"
bz ["
bz ^"
bz a"
bz d"
bz g"
bz j"
bz m"
0b
b11111111111111111111111111101001 =
b11111111111111111111111111101001 C
b11111111111111111111111111101001 F
b11111111111111111111111111101001 Y
b11111111111111111111111111101001 :
b11111111111111111111111111101001 D
b11111111111111111111111111101001 K
b11111111111111111111111111101001 q"
b11111111111111111111111111101001 y"
b11111111111111111111111111101001 }"
b11111111111111111111111111101001 R
b11111111111111111111111111101001 g
b10100 P
b10100 f
b0 Q
b0 i
b0 O
b0 h
b10101 j
b10101 N
b10101 k
b0 <
b0 B
b0 E
b0 Z
1.
b10 c
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b10100010101010000011 M
b10100010101010000011 0
b10100010101010000011 V
b10100010101010000011 ##
b11100 t"
b110 "
b11111111111111111111111111101001 K"
b11100 '
b11100 S
b11100 w"
b11000 1
b11000 T
b11000 v"
b11000 ~"
b11000 u"
1!
#17
0!
#18
bz00000000 @
bz00000000 {"
bz00000000 $#
1,
1(
b1111011 =
b1111011 C
b1111011 F
b1111011 Y
b1111100 :
b1111100 D
b1111100 K
b1111100 q"
b1111100 y"
b1111100 }"
b1111011 R
b1111011 g
b100 P
b100 f
b11111111111111111111111111101001 Q
b11111111111111111111111111101001 i
b10100 O
b10100 h
b1 j
b1 N
b1 k
b1 <
b1 B
b1 E
b1 Z
b101 -
b101 ]
b101 x"
b101 !#
b11111111111111111111111111101001 ?
b11111111111111111111111111101001 ^
b11111111111111111111111111101001 "#
1.
b0 c
b10 _
b0 d
b11000 ;
b11000 A
b11000 [
b1010000100010000010100011 M
b100000 t"
b1010000100010000010100011 0
b1010000100010000010100011 V
b1010000100010000010100011 ##
b11100 u"
b100000 '
b100000 S
b100000 w"
b11100 1
b11100 T
b11100 v"
b11100 ~"
b111 "
1!
#19
0!
#20
1J"
b100000000000000000000 m
b11111111111111111111111111101001 a
b11111111111111111111111111101001 l
b11111111111111111111111111101001 n
b11111111111111111111111111101001 q
b11111111111111111111111111101001 t
b11111111111111111111111111101001 w
b11111111111111111111111111101001 z
b11111111111111111111111111101001 }
b11111111111111111111111111101001 ""
b11111111111111111111111111101001 %"
b11111111111111111111111111101001 ("
b11111111111111111111111111101001 +"
b11111111111111111111111111101001 ."
b11111111111111111111111111101001 1"
b11111111111111111111111111101001 4"
b11111111111111111111111111101001 7"
b11111111111111111111111111101001 :"
b11111111111111111111111111101001 ="
b11111111111111111111111111101001 @"
b11111111111111111111111111101001 C"
b11111111111111111111111111101001 F"
b11111111111111111111111111101001 I"
b11111111111111111111111111101001 L"
b11111111111111111111111111101001 O"
b11111111111111111111111111101001 R"
b11111111111111111111111111101001 U"
b11111111111111111111111111101001 X"
b11111111111111111111111111101001 ["
b11111111111111111111111111101001 ^"
b11111111111111111111111111101001 a"
b11111111111111111111111111101001 d"
b11111111111111111111111111101001 g"
b11111111111111111111111111101001 j"
b11111111111111111111111111101001 m"
1b
b11111111111111111111111111101001 /
b11111111111111111111111111101001 U
b11111111111111111111111111101001 |"
0(
1,
b11111111111111111111111111101001 @
b11111111111111111111111111101001 {"
b11111111111111111111111111101001 $#
b0 Q
b0 i
b1 O
b1 h
b10100 j
b10100 N
b10100 k
b10 c
b0 -
b0 ]
b0 x"
b0 !#
1.
bz ?
bz ^
bz "#
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b100100010101000000011 M
b100100010101000000011 0
b100100010101000000011 V
b100100010101000000011 ##
b100100 t"
b1000 "
b100100 '
b100100 S
b100100 w"
b100000 1
b100000 T
b100000 v"
b100000 ~"
b100000 u"
1!
#21
0!
#22
0J"
b0 m
1(
bz /
bz U
bz |"
0,
bz11101001 @
bz11101001 {"
bz11101001 $#
bz a
bz l
bz n
bz q
bz t
bz w
bz z
bz }
bz ""
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz @"
bz C"
bz F"
bz I"
bz L"
bz O"
bz R"
bz U"
bz X"
bz ["
bz ^"
bz a"
bz d"
bz g"
bz j"
bz m"
0b
b1111110 :
b1111110 D
b1111110 K
b1111110 q"
b1111110 y"
b1111110 }"
b11111111111111111111111111101001 Q
b11111111111111111111111111101001 i
b10100 O
b10100 h
b11 j
b11 N
b11 k
b11 <
b11 B
b11 E
b11 Z
b101 -
b101 ]
b101 x"
b101 !#
b11111111111111111111111111101001 ?
b11111111111111111111111111101001 ^
b11111111111111111111111111101001 "#
1.
b0 c
b10 _
b0 d
b11000 ;
b11000 A
b11000 [
b1010000100010000110100011 M
b101000 t"
b1010000100010000110100011 0
b1010000100010000110100011 V
b1010000100010000110100011 ##
b100100 u"
b101000 '
b101000 S
b101000 w"
b100100 1
b100100 T
b100100 v"
b100100 ~"
b1001 "
1!
#23
0!
#24
0,
1(
b0 Q
b0 i
b11 O
b11 h
b11001 j
b11001 N
b11001 k
b10 c
b0 -
b0 ]
b0 x"
b0 !#
1.
bz ?
bz ^
bz "#
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b1100100010110010000011 M
b1100100010110010000011 0
b1100100010110010000011 V
b1100100010110010000011 ##
b101100 t"
b1010 "
b101100 '
b101100 S
b101100 w"
b101000 1
b101000 T
b101000 v"
b101000 ~"
b101000 u"
1!
#25
0!
#26
1P"
b10000000000000000000000 m
b1100100 a
b1100100 l
b1100100 n
b1100100 q
b1100100 t
b1100100 w
b1100100 z
b1100100 }
b1100100 ""
b1100100 %"
b1100100 ("
b1100100 +"
b1100100 ."
b1100100 1"
b1100100 4"
b1100100 7"
b1100100 :"
b1100100 ="
b1100100 @"
b1100100 C"
b1100100 F"
b1100100 I"
b1100100 L"
b1100100 O"
b1100100 R"
b1100100 U"
b1100100 X"
b1100100 ["
b1100100 ^"
b1100100 a"
b1100100 d"
b1100100 g"
b1100100 j"
b1100100 m"
1b
b1100100 @
b1100100 {"
b1100100 $#
b1100100 /
b1100100 U
b1100100 |"
1,
0(
b0 =
b0 C
b0 F
b0 Y
b0 :
b0 D
b0 K
b0 q"
b0 y"
b0 }"
b0 R
b0 g
b101 P
b101 f
b0 O
b0 h
b10110 j
b10110 N
b10110 k
b0 <
b0 B
b0 E
b0 Z
1.
b10 c
b1 _
b0 d
b11000 ;
b11000 A
b11000 [
b101010101100000011 M
b110000 t"
b101010101100000011 0
b101010101100000011 V
b101010101100000011 ##
b101100 u"
b110000 '
b110000 S
b110000 w"
b101100 1
b101100 T
b101100 v"
b101100 ~"
b1011 "
1!
#27
0!
#28
bz /
bz U
bz |"
0,
0P"
0z"
b0 m
bz a
bz l
bz n
bz q
bz t
bz w
bz z
bz }
bz ""
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz @"
bz C"
bz F"
bz I"
bz L"
bz O"
bz R"
bz U"
bz X"
bz ["
bz ^"
bz a"
bz d"
bz g"
bz j"
bz m"
0b
bz =
bz C
bz F
bz Y
0>
09
b0 P
b0 f
b0 j
b0 N
b0 k
bz <
bz B
bz E
bz Z
0.
b0 c
b101 _
b10 d
b0 ;
b0 A
b0 [
b0 M
b0 0
b0 V
b0 ##
b110100 t"
b1100 "
b1100100 Q"
b110100 '
b110100 S
b110100 w"
b110000 1
b110000 T
b110000 v"
b110000 ~"
b110000 u"
1!
#29
0!
#30
b111000 t"
b110100 u"
b111000 '
b111000 S
b111000 w"
b110100 1
b110100 T
b110100 v"
b110100 ~"
b1101 "
1!
#31
0!
#32
b111100 t"
b1110 "
b111100 '
b111100 S
b111100 w"
b111000 1
b111000 T
b111000 v"
b111000 ~"
b111000 u"
1!
#33
0!
#34
b1000000 t"
b111100 u"
b1000000 '
b1000000 S
b1000000 w"
b111100 1
b111100 T
b111100 v"
b111100 ~"
b1111 "
1!
#35
0!
#36
b1000100 t"
b10000 "
b1000100 '
b1000100 S
b1000100 w"
b1000000 1
b1000000 T
b1000000 v"
b1000000 ~"
b1000000 u"
1!
#37
0!
#38
b1001000 t"
b1000100 u"
b1001000 '
b1001000 S
b1001000 w"
b1000100 1
b1000100 T
b1000100 v"
b1000100 ~"
b10001 "
1!
#39
0!
#40
b1001100 t"
b10010 "
b1001100 '
b1001100 S
b1001100 w"
b1001000 1
b1001000 T
b1001000 v"
b1001000 ~"
b1001000 u"
1!
#41
0!
#42
b1010000 t"
b1001100 u"
b1010000 '
b1010000 S
b1010000 w"
b1001100 1
b1001100 T
b1001100 v"
b1001100 ~"
b10011 "
1!
#43
0!
#44
b1010100 t"
b10100 "
b1010100 '
b1010100 S
b1010100 w"
b1010000 1
b1010000 T
b1010000 v"
b1010000 ~"
b1010000 u"
1!
#45
0!
#46
b1011000 t"
b1010100 u"
b1011000 '
b1011000 S
b1011000 w"
b1010100 1
b1010100 T
b1010100 v"
b1010100 ~"
b10101 "
1!
#47
0!
#48
b1011100 t"
b10110 "
b1011100 '
b1011100 S
b1011100 w"
b1011000 1
b1011000 T
b1011000 v"
b1011000 ~"
b1011000 u"
1!
#49
0!
#50
b1100000 t"
b1011100 u"
b1100000 '
b1100000 S
b1100000 w"
b1011100 1
b1011100 T
b1011100 v"
b1011100 ~"
b10111 "
1!
#51
0!
#52
b1100100 t"
b11000 "
b1100100 '
b1100100 S
b1100100 w"
b1100000 1
b1100000 T
b1100000 v"
b1100000 ~"
b1100000 u"
1!
#53
0!
#54
b1101000 t"
b1100100 u"
b1101000 '
b1101000 S
b1101000 w"
b1100100 1
b1100100 T
b1100100 v"
b1100100 ~"
b11001 "
1!
#55
0!
#56
b1101100 t"
b11010 "
b1101100 '
b1101100 S
b1101100 w"
b1101000 1
b1101000 T
b1101000 v"
b1101000 ~"
b1101000 u"
1!
